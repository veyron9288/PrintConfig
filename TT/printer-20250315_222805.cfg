[include fluidd.cfg]
[include mainsail.cfg]
[include printer-macros.cfg]
# [include adxl.cfg]   #输入 ACCELEROMETER_QUERY 进行测试

[force_move]
enable_force_move: true

[gcode_arcs]
resolution: 0.1

[exclude_object]

[virtual_sdcard]
path: /home/umeko/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[mcu]
serial:/dev/serial/by-id/usb-Klipper_stm32f446xx_54002C001551373330333137-if00

# canbus_uuid: 9726624248a8  ##ffa6fb28ae45 # 在此处填写主板的CAN ID
restart_method: command
# restart_method: cheetah
[pause_resume] #暂停恢复

[display_status]


[printer]
kinematics: corexy			# corexy结构，普通结构（笛卡尔坐标系）填cartesian
max_z_velocity: 8			# z轴限制最大速度
max_z_accel: 300				# z轴限制最大加速度
max_velocity: 600			  # xy最大速度
max_accel: 30000			  # xy最大加速度
square_corner_velocity: 5.0

[stepper_x]
step_pin: PC9                    # step端口
dir_pin: !PA8                    # 电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成！PA1
enable_pin: !PC8                 # 信号端口
microsteps: 128                    # 细分
rotation_distance: 40             # 主动轮周长mm（2GT-20齿同步轮=40，2GT-16齿同步轮=32）
full_steps_per_rotation: 200      # 步进电机转一圈需要的步数（1.8度电机:360/1.8=200，0.9度电机:360/0.9=400）
position_min: 0                   # 行程最小位置的坐标
position_max: 310                 # 行程最大位置的坐标
position_endstop: 310               # 限位开关触发位置的坐标
homing_speed: 60                  # 归零速度
homing_retract_dist: 5            # 第一次回原点后，后退的距离 
second_homing_speed: 5            # 第二次回原点的速度
# homing_positive_dir: true        # 复位方向（一般不需要改动）
endstop_pin: ^!PC15                # 限位开关PIN（X-）

# [tmc2209 stepper_x]
# uart_pin: PC7               #RX
# interpolate: false           #开启插值=256细分
# run_current: 1.1          #电机电流
# sense_resistor: 0.110       #驱动采样电阻值（不要修改）
# # stealthchop_threshold: 0

[tmc2240 stepper_x]                 # 挤出机驱动配置- TMC2240
cs_pin: PC7                         # SPI 片选Pin脚定义
spi_bus: spi4                       # SPI 通讯总线定义
# spi_software_sclk_pin:PA5
# spi_software_mosi_pin:PA7
# spi_software_miso_pin:PA6
run_current: 1.5                   # 电机运行电流值
# hold_current: 0.800         #电机静态力矩保持电流值
interpolate: false                   # 是否开启256微步插值（不建议开启）
rref: 12000                         # 驱动采样电阻
stealthchop_threshold: 0        # 静音阀值（如果不需要静音，请将数值改为0）
# diag0_pin: ^!PE8  
# driver_SGT: 2   	# -64是最敏感的值，63是最不敏感的值											# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 


[stepper_y]
step_pin: PD14                   # step端口 
dir_pin: !PD15	                  # 电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成！PA1
enable_pin: !PC6                 # en端口
microsteps: 128                    # 细分
rotation_distance: 40             # 主动轮周长mm（2GT-20齿同步轮=40，2GT-16齿同步轮=32）
full_steps_per_rotation: 200      # 步进电机转一圈需要的步数（1.8度电机:360/1.8=200，0.9度电机:360/0.9=400）
position_min: 0                  # 行程最小位置的坐标
position_max: 300                 # 行程最大位置的坐标
position_endstop: 300           # 限位开关触发位置的坐标
homing_speed: 60                 # 复位速度
homing_retract_dist: 5           # 第一次回原点后，后退的距离 
second_homing_speed: 5           # 第二次回原点的速度
# homing_positive_dir: true        # 复位方向（一般不需要改动）
endstop_pin: ^!PC14                # 限位PIN（Y+）

# [tmc2209 stepper_y]
# uart_pin: PD13               #RX
# interpolate: false           #开启插值=256细分
# run_current: 1.1          #电机电流
# sense_resistor: 0.110       #驱动采样电阻值（不要修改）
# # stealthchop_threshold: 0

[tmc2240 stepper_y]                 # 挤出机驱动配置- TMC2240
cs_pin: PD13                         # SPI 片选Pin脚定义
spi_bus: spi4                       # SPI 通讯总线定义
# spi_software_sclk_pin:PA5
# spi_software_mosi_pin:PA7
# spi_software_miso_pin:PA6
run_current: 1.5                  # 电机运行电流值
# hold_current: 0.800         #电机静态力矩保持电流值
interpolate: false                   # 是否开启256微步插值（不建议开启）
rref: 12000                         # 驱动采样电阻
stealthchop_threshold: 0        # 静音阀值（如果不需要静音，请将数值改为0）
# diag0_pin: ^!PE15  
# driver_SGT: 2 												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 


[stepper_z]
step_pin: PD11				                    #step端口
dir_pin: !PD12		                  	#电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成！PA1
enable_pin: !PE10			                  #电机使能引脚，如果发现，未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
rotation_distance: 2	                	#电机旋转一圈Z轴移动的距离，例如T8丝杆的导程是8mm，即丝杆转一圈螺母移动8mm
microsteps: 32			            	      #步进电机使用的细分数
full_steps_per_rotation: 200            #电机旋转一圈需要的步数，例如1.8度电机为360/1.8=200
endstop_pin:probe:z_virtual_endstop			              #引脚触发限位
#endstop_pin:^!PC13     #设置Z轴为虚拟限位，使用接近开关需要开启此项
position_min: -20			                	#Z轴可移动的最小值
position_max: 300			                  #Z轴可移动的最大值
# homing_speed: 6
# homing_retract_dist: 5.0
# homing_retract_speed: 6
# second_homing_speed: 3.0


[tmc2209 stepper_z]
uart_pin: PE11               #RX
interpolate: false           #开启插值=256细分
run_current: 0.8          #电机电流
sense_resistor: 0.110       #驱动采样电阻值（不要修改）
stealthchop_threshold: 0


[stepper_z1]
step_pin: PB10				          #驱动步进脚
dir_pin: !PB12				          #驱动方向引脚，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成！PA1
enable_pin: !PE10                #电机使能引脚，如果发现，未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
rotation_distance: 2		        #电机旋转一圈Z轴移动的距离，例如T8丝杆的导程是8mm，即丝杆转一圈螺母移动8mm
microsteps: 32				          #步进电机使用的细分数
full_steps_per_rotation: 200    #电机旋转一圈需要的步数，例如1.8度电机为360/1.8=200

[tmc2209 stepper_z1]
uart_pin: PB13               #RX
interpolate: false           #开启插值=256细分
run_current: 0.8          #电机电流
sense_resistor: 0.110       #驱动采样电阻值（不要修改）
stealthchop_threshold: 0

[stepper_z2]
step_pin: PB14                     #驱动步进脚
dir_pin: !PB15                    #驱动方向引脚，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成！PA1
enable_pin: !PE10               #电机使能引脚，如果发现，未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
rotation_distance: 2	         	 #电机旋转一圈Z轴移动的距离，例如T8丝杆的导程是8mm，即丝杆转一圈螺母移动8mm
microsteps: 32				           #步进电机使用的细分数
full_steps_per_rotation: 200     #电机旋转一圈需要的步数，例如1.8度电机为360/1.8=200

[tmc2209 stepper_z2]
uart_pin: PD8               #RX
interpolate: false           #开启插值=256细分
run_current: 0.8          #电机电流
sense_resistor: 0.110       #驱动采样电阻值（不要修改）
stealthchop_threshold: 0



[extruder]
step_pin: PD10                       #PB10
dir_pin: PD9                      #!PB1 
enable_pin: !PE10                   #电机使能引脚，如果发现，未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
microsteps: 32							         #驱动 细分数
rotation_distance: 22.3756				     #挤出机旋转一圈挤出的长度  原始值：22.987  测量值：22.3756
gear_ratio: 50:10							       #挤出机齿轮减速比
nozzle_diameter: 0.400		 			     #喷嘴直径
filament_diameter: 1.750			       #耗材直径
heater_pin: PA10							         #加热引脚
max_power: 1.0							         #加热头的最大功率，如果你的电源额定功率非常低，那可以用0.3或0.5，但是会加热的慢
sensor_type: Generic 3950		         #温度传感器的类型
sensor_pin: PC3							         #ADC引脚
pullup_resistor: 4700					       #与热敏接入电路中的上拉电阻
#smooth_time: 1							         #使用多久时间内测得多组数据的平均温度当温度值
control: pid							           #温控算法pid 或者 watermark
		#以下是pid控温系数
pid_kp = 33.423
pid_ki = 2.476
pid_kd = 112.803	                   #pid结束
		#以下是watermark控温系数
# max_delta: 2.0						         #当温度-预设温度>max_delta停止加热，当预设温度-温度<max_delta开始加热
		#watermark结束
#pwm_cycle_time: 0.100					     #加热器pwm切换时间，保持默认为好
min_extrude_temp: 170					       #挤出机能挤出的最小温度
min_temp: -273						           #打印机能运作的最低温度，调试时候可以给-273，正常使用不建议低于-10度
max_temp: 320							           #挤出加热棒的最大温度，超过此温度将紧急停机

[tmc2209 extruder]
uart_pin: PE9               #RX
#uart_address: 2             #对应地址
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


[heater_bed]
heater_pin: PA14							  #加热引脚
max_power: 1						   	  #加热头的最大功率，如果你的电源额定功率非常低，那可以用0.3或0.5，但是会加热的慢
sensor_type: Generic 3950		  #温度传感器的类型
sensor_pin: PC2							  #ADC引脚
pullup_resistor: 4700					#与热敏接入电路中的上拉电阻
#smooth_time: 1							  #使用多久时间内测得多组数据的平均温度当温度值
#pwm_cycle_time: 0.100				#加热器pwm切换时间，保持默认为好
min_temp: -255						      #打印机能运作的最低温度，调试时候可以给-273，正常使用不建议低于-10度
max_temp: 120                 #最大温度，超过此温度将紧急停机
control: pid
pid_kp = 62.922
pid_ki = 0.539
pid_kd = 1835.747							


#####################################################################
#                           调平传感器                               #
#####################################################################

[probe]
pin: PB5
# x_offset: 0
# y_offset: 0
#z_offset: -10
speed: 5 # 调平速度
samples: 3 # 采样次数
samples_result: median # 取值⽅式（默认median-中位数）
sample_retract_dist: 4.0 # 调平回缩距离
samples_tolerance: 0.006 # 采样公差（注意过⼩的值可能造成采样次数增加）
samples_tolerance_retries: 3 # 超公差重试次数
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}


[safe_z_home]
home_xy_position: 155,155
speed: 100                  #工具头移动到安全Z原点的速度，默认为50毫米/秒
z_hop: 10                   #在归位前抬升Z轴的距离（mm）。这将用于任何归位命令，即使它没有将Z轴归位。
z_hop_speed: 15            #在归位之前，Z轴抬升的速度（单位：mm/s），默认为15mm/s。
move_to_previous: false     #当设置为 "True "时，X轴和Y轴在Z轴归位后会重置到之前的位置，默认为false。

[z_tilt]
z_positions:                #三个Z轴的支撑点，也就是热床的旋转轴的坐标
  -20.5,-23
  155,349
  330.5,-23
points:                     #三个Z轴回零探测点的坐标
  15,15
  155,295
  295,15
speed: 200                  #校准时的移动速度
horizontal_move_z: 10       #喷嘴抬升高度
retries: 5                  #重复测量次数
retry_tolerance: 0.006       #重复测量的最大误差


[bed_mesh]
speed: 100                  #非测试时候的xy移动速度，即这个点到下个点之间的移动速度
horizontal_move_z: 10      #Z轴抬升高度
mesh_min: 35,20             #第一个探测的坐标，最接近原点。该坐标是相对于探针的位置的
mesh_max: 270,295           #距离原点最远的探测坐标。这不一定是探测的最后一点
probe_count: 10,10           #采样点数（4X4为16点）
algorithm: bicubic         #要使用的插值算法，可以是"lagrange"或者"bicubic"。当探测点为3*3强制使用lagrange，默认值是lagrange
bicubic_tension: 0.2       #算法插值不要动
mesh_pps: 2,2              #补充采样点数



#喉管风扇
[heater_fan 喉管风扇]       #喉管散热风扇
pin: PE2
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0


[fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10


[output_pin LED灯带] #LED灯带
pin: PE3                      #对应信号引脚  使用FAN接口
pwm: true                       #不使用PWM调节，默认值是false，输出信号引脚电平只有0和1，如果填true，输出信号引脚电平在0到1之间
#static_value:                  #如果设置了该值，则会在启动时将pin分配给该值，并且在运行时无法更改pin。
cycle_time: 0.001               #调节PWM时间
value: 1.0                 #在MCU配置期间最初设置引脚的值。默认值为0（对于低电压）。
shutdown_value: 0


[fan_generic 主板风扇]
pin: PE4
max_power: 1


# [temperature_sensor 仓温]
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: PC0


# [temperature_sensor 仓温1]
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: PC1



[temperature_sensor 下位机]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 10                 #最小温度
max_temp: 100                #最大温度

#开机后设定当前位置（解锁保护）
[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
  SET_KINEMATIC_POSITION

[verify_heater heater_bed]
max_error: 120
check_gain_time:5000

###PID 宏###
[gcode_macro extruder_PID]          #加热头PID
description: 加热头 PID 
gcode:   
    {% set extruder_temp = params.TEMPERATURE|default(230)|float %}
    PID_CALIBRATE HEATER=extruder TARGET={extruder_temp}

[gcode_macro BED_PID]               #热床PID
description: 热床 PID 
gcode:   
    {% set bed_temp = params.TEMPERATURE|default(60)|float %}   
    PID_CALIBRATE HEATER=heater_bed TARGET={bed_temp}

[gcode_macro Save_Restart ]           
description: 保存配置
gcode:
      SAVE_CONFIG

[gcode_macro Open_LED]
gcode:
    {% set brightness = params.BRIGHTNESS|default(50) |int %}
    SET_PIN PIN=LED灯带 VALUE={brightness * 0.01}
    
[gcode_macro Close_LED]
gcode:
    SET_PIN PIN=LED灯带 VALUE=0

[gcode_macro Open_Drive_Fan]
gcode:
    SET_FAN_SPEED FAN=主板风扇 SPEED=1

[gcode_macro Close_Drive_Fan]
gcode:
    SET_FAN_SPEED FAN=主板风扇 SPEED=0

[gcode_macro Change_Filament]
gcode:
    {% set extruder_temp = params.TEMPERATURE|default(230)|float %}
    SET_FAN_SPEED FAN=主板风扇 SPEED=1
	G28
    G0 X30 Y1 Z30 F3600
    M109 S{extruder_temp}
    M106 S255

    M118 请尽快更换耗材！！！

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E10 F600                           ; extrude a little to soften tip 
	# G1 E-100 F1800                        ; retract filament completely
    G1 E-125 F2000
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	G1 E90 F600
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(175)|float %}
    {% set Y = params.Y|default(20)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F3600
    G1 Z10
    PARKFRONT
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state

    SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=1
    SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=2

# Replace M190 (Wait for heater bed temperature with TEMPERATURE_WAIT) to allow temperature overshoot and under temperature (within 1 deg)
# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT to allow temperature overshoot
#将 M109（等待热端温度）替换为 TEMPERATURE_WAIT 以允许温度过冲
[gcode_macro M109]
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s - 0.5}
    {% endif %}


# Replace M190 (Wait for heater bed temperature with TEMPERATURE_WAIT) to allow temperature overshoot and under temperature (within 1 deg)
#替换 M190（用 TEMPERATURE_WAIT 等待加热床温度）以允许温度过冲和低于温度（1 度以内）
[gcode_macro M190]
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set heater bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s - 0.5}
    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.014062, 0.006875, -0.000313, 0.000625, 0.003750, 0.018437, 0.029687, 0.022187, 0.005625, -0.005000
#*# 	-0.003750, -0.007500, -0.012500, -0.005625, 0.004375, 0.014062, 0.026562, 0.017500, 0.006562, -0.000313
#*# 	0.001875, -0.003125, -0.008750, -0.007188, 0.003125, 0.013437, 0.030937, 0.020937, 0.007187, -0.004375
#*# 	-0.009375, -0.005938, -0.010625, -0.021563, -0.006875, 0.014062, 0.014375, 0.009062, 0.001250, -0.007500
#*# 	-0.014063, -0.013125, -0.032500, -0.018125, -0.016563, -0.002188, 0.020312, 0.005625, 0.002500, -0.012188
#*# 	-0.018750, -0.032500, -0.026563, -0.024063, -0.022813, -0.002813, 0.018125, 0.005000, -0.006875, -0.017500
#*# 	-0.024688, -0.032813, -0.031563, -0.031563, -0.014063, -0.003438, 0.012812, 0.006562, -0.006563, -0.023125
#*# 	-0.029688, -0.031250, -0.027813, -0.024063, -0.009375, 0.015937, 0.026250, 0.012187, -0.004375, -0.011563
#*# 	-0.028125, -0.025313, -0.033438, -0.017188, -0.002500, 0.007812, 0.022187, 0.006250, -0.008438, -0.016563
#*# 	-0.034688, -0.032813, -0.038125, -0.023750, -0.010938, 0.013125, 0.023125, 0.006562, -0.005938, -0.016563
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 269.99
#*# min_y = 20.0
#*# max_y = 294.95000000000005
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 75.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 46.8
#*#
#*# [probe]
#*# z_offset = -0.170
